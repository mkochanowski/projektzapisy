# Generated by Django 2.0.8 on 2019-04-08 17:20

import apps.enrollment.courses.models.course_information
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0015_merge_20190321_1311'),
        ('courses', '0016_merge_20190313_1524'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nazwa przedmiotu')),
                ('name_en', models.CharField(blank=True, max_length=100, verbose_name='nazwa po angielsku')),
                ('short_name', models.CharField(blank=True, max_length=30, verbose_name='skrócona nazwa przedmiotu')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='identyfikator URL')),
                ('description', models.TextField(blank=True, verbose_name='opis przedmiotu')),
                ('language', models.CharField(choices=[(apps.enrollment.courses.models.course_information.Language('en'), 'angielski'), (apps.enrollment.courses.models.course_information.Language('pl'), 'polski')], default=apps.enrollment.courses.models.course_information.Language('pl'), max_length=2, verbose_name='język wykładowy')),
                ('recommended_for_first_year', models.BooleanField(default=False, verbose_name='przedmiot polecany dla pierwszego roku')),
                ('semester', models.CharField(choices=[(apps.enrollment.courses.models.course_information.SemesterChoices('u'), 'nieokreślony'), (apps.enrollment.courses.models.course_information.SemesterChoices('z'), 'zimowy'), (apps.enrollment.courses.models.course_information.SemesterChoices('l'), 'letni')], default=apps.enrollment.courses.models.course_information.SemesterChoices('u'), max_length=1, verbose_name='semestr')),
                ('has_exam', models.BooleanField(default=True, verbose_name='przedmiot z egzaminem')),
                ('hours_lecture', models.PositiveSmallIntegerField(verbose_name='godzin wykładu')),
                ('hours_exercise', models.PositiveSmallIntegerField(verbose_name='godzin ćwiczeń')),
                ('hours_lab', models.PositiveSmallIntegerField(verbose_name='godzin pracowni')),
                ('hours_exercise_lab', models.PositiveSmallIntegerField(verbose_name='godzin ćwiczenio-pracowni')),
                ('hours_seminar', models.PositiveSmallIntegerField(verbose_name='godzin seminarium')),
                ('hours_recap', models.PositiveSmallIntegerField(verbose_name='godzin repetytorium')),
                ('teaching_methods', models.TextField(blank=True, verbose_name='metody kształcenia')),
                ('preconditions', models.TextField(blank=True, verbose_name='wymagania wstępne')),
                ('objectives', models.TextField(blank=True, verbose_name='cele przedmiotu')),
                ('contents', models.TextField(blank=True, verbose_name='treści programowe')),
                ('teaching_effects', models.TextField(blank=True, verbose_name='zakładane efekty kształcenia')),
                ('literature', models.TextField(blank=True, verbose_name='literatura obowiązkowa i zalecana')),
                ('verification_methods', models.TextField(blank=True, verbose_name='metoda weryfikacji zakładanych efektów kształcenia')),
                ('passing_means', models.TextField(blank=True, verbose_name='Warunki i forma zaliczenia')),
                ('student_labour', models.TextField(blank=True, verbose_name='nakład pracy studenta')),
                ('teaching_unit', models.CharField(blank=True, max_length=100, verbose_name='jednostka prowadząca przedmiot')),
                ('usos_kod', models.CharField(blank=True, editable=False, max_length=20, verbose_name='kod przedmiotu w USOS')),
                ('major', models.CharField(blank=True, max_length=100, verbose_name='kierunek studiów')),
                ('level', models.CharField(blank=True, max_length=100, verbose_name='poziom studiów')),
                ('year', models.CharField(blank=True, max_length=50, verbose_name='rok studiów')),
                ('course_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='courses.Type', verbose_name='rodzaj')),
                ('effects', models.ManyToManyField(to='courses.Effects', verbose_name='grupy efektów kształcenia')),
                ('entity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.CourseEntity', verbose_name='tymczasowe pole ułatwiające migrację')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.Employee')),
                ('tags', models.ManyToManyField(to='courses.Tag', verbose_name='tagi')),
            ],
        ),
    ]
